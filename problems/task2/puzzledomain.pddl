(define (domain puzzledomain)
(:requirements :strips :typing)
(:types X Y V - object)
(:predicates (locationValue ?x - X ?y - Y ?value - V)
             (neighbours ?x1 - X ?y1 - Y ?x2 - X ?y2 - Y)
             )

(:action swap
    :parameters (?x1 - X ?y1 - Y ?value1 - V ?x2 - X ?y2 - Y ?value2 - V)
    :precondition (and (neighbours ?x1 ?y1 ?x2 ?y2)
                        (locationValue ?x1 ?y1 ?value1)
                        (locationValue ?x2 ?y2 ?value2)
    )
    :effect (and (not (locationValue ?x1 ?y1 ?value1)) 
    (not (locationValue ?x2 ?y2 ?value2)) 
    (locationValue ?x1 ?y1 ?value2) 
    (locationValue ?x2 ?y2 ?value1))
    )
)