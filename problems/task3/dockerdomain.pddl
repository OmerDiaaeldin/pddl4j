(define (domain dockerdomain)
(:requirements :strips :typing :negative-preconditions)
(:types loc entity - object
        truck container - entity
)
(:predicates (truck-empty ?t - truck)
            (at ?p - loc ?ent - entity)
            (on ?t - truck ?c - container)
            (cTop ?c - container)
            (cBot ?c - container)
            (stacked ?c1 - container ?c2 - container)
            (locationEmpty ?l - loc)
            (same ?c1 - container ?c2 - container)
)

(:action load-middle
    :parameters (?tr - truck ?cn - container ?location - loc ?cn-below - container)
    :precondition (and (at ?location ?cn)
                    (at ?location ?tr)
                    (truck-empty ?tr)
                    (cTop ?cn)
                    (stacked ?cn ?cn-below)
                    (not (cBot ?cn))
                    )
    :effect (and (not (truck-empty ?tr))
                        (on ?tr ?cn)
                        (not (cTop ?cn))
                        (cTop ?cn-below)
                        (not (stacked ?cn ?cn-below))
    )
)

(:action load-last
    :parameters (?tr - truck ?cn - container ?location - loc)
    :precondition (and (truck-empty ?tr)
                        (at ?location ?cn)
                        (at ?location ?tr)
                        (cTop ?cn)
                        (cBot ?cn)
                    )
    :effect (and (not (truck-empty ?tr))
                        (on ?tr ?cn)
                        (not (cTop ?cn))
                        (not (cBot ?cn))
                        (locationEmpty ?location)
    )
)

(:action unload-middle
    :parameters (?tr - truck ?cn - container ?location - loc ?cn-top - container)
    :precondition (and (not (truck-empty ?tr))
                        (on ?tr ?cn)
                        (at ?location ?tr)
                        (at ?location ?cn-top)              
                        (not (same ?cn ?cn-top))          
                    )
    :effect (and (truck-empty ?tr)
                        (not (on ?tr ?cn))
                        (not (cTop ?cn-top))
                        (cTop ?cn)
                        (not (cBot ?cn))
                        (stacked ?cn ?cn-top)
    )
)

(:action unload-first
    :parameters (?tr - truck ?cn - container ?location - loc)
    :precondition (and (not (truck-empty ?tr))
                        (at ?location ?tr)
                        (on ?tr ?cn)
                        (locationEmpty ?location)
                    )
    :effect (and (truck-empty ?tr)
                        (not (on ?tr ?cn))
                        (cTop ?cn)
                        (cBot ?cn)
                        (not (locationEmpty ?location))
    )
)

(:action move-empty-truck
    :parameters (?tr - truck ?l1 -loc ?l2 - loc)
    :precondition (and (at ?l1 ?tr)
                        (truck-empty ?tr)
    )
    :effect (and (not (at ?l1 ?tr))
            (at ?l2 ?tr)
    )
)

(:action move-full-truck
    :parameters (?tr - truck ?l1 -loc ?l2 - loc ?c - container)
    :precondition (and (at ?l1 ?tr)
                        (on ?tr ?c)
    )
    :effect (and (not (at ?l1 ?tr))
            (at ?l2 ?tr)
            (not (at ?l1 ?c))
            (at ?l2 ?c)
    ))
)